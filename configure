#!/bin/sh

TMPC="ffmpeg-conf-${RANDOM}-$$-${RANDOM}.c"
TMPO="ffmpeg-conf-${RANDOM}-$$-${RANDOM}.o"
TMPS="ffmpeg-conf-${RANDOM}-$$-${RANDOM}.S"

if [ ! -z "$TMPDIR" ]; then
	TMPC="${TMPDIR}/${TMPC}"
	TMPCPP="${TMPDIR}/${TMPCPP}"
	TMPO="${TMPDIR}/${TMPO}"
	TMPS="${TMPDIR}/${TMPS}"
elif [ ! -z "$TEMPDIR" ]; then
	TMPC="${TEMPDIR}/${TMPC}"
	TMPCPP="${TEMPDIR}/${TMPCPP}"
	TMPO="${TEMPDIR}/${TMPO}"
	TMPS="${TEMPDIR}/${TMPS}"
else
	TMPC="/tmp/${TMPC}"
	TMPCPP="/tmp/${TMPCPP}"
	TMPO="/tmp/${TMPO}"
	TMPS="/tmp/${TMPS}"
fi

# default parameters
prefix="/usr/local"
cc="gcc"
ar="ar"
cpu=`uname -m`
case "$cpu" in
  i386|i486|i586|i686|i86pc)
    cpu="x86"
    mmx="yes"
  ;;
  armv4l)
    cpu="armv4l"
    mmx="no"
  ;;
  *)
    mmx="no"
  ;;
esac
gprof="no"
grab="yes"
win32="no"

if [ "$1" = "-h" -o "$1" = "--help" ] ; then
cat << EOF

Usage: configure [options]
Options: [defaults in brackets after descriptions]

  --help                  print this message
EOF
echo "  --prefix=PREFIX         install in PREFIX [$prefix]"
echo "  --cc=CC                 use C compiler CC [$cc]"
echo "  --cpu=CPU               force cpu to CPU  [$cpu]"
echo "  --disable-mmx           disable mmx usage"
echo "  --enable-gprof          enable profiling with gprof [$gprof]"
echo "  --disable-grab          disable audio/video grabbing code"
echo "  --enable-win32          enable win32 cross compile"
echo "  --enable-shared         build shared libraries [default=no]"
exit 1
fi

lshared=no
for opt do
  case "$opt" in
  --prefix=*) prefix=`echo $opt | cut -d '=' -f 2`
  ;;
  --cc=*) cc=`echo $opt | cut -d '=' -f 2`
  ;;
  --cpu=*) cpu=`echo $opt | cut -d '=' -f 2`
  ;;
  --disable-mmx) mmx="no"
  ;;
  --enable-gprof) gprof="yes"
  ;;
  --disable-grab) grab="no"
  ;;
  --enable-win32) win32="yes"
  ;;
  --enable-shared=*) lshared=`echo $opt | cut -d '=' -f 2`
  ;;
  esac
done

# Checking for CFLAGS
if test -z "$CFLAGS"; then
    CFLAGS="-O2"
fi

if [ "$win32" = "yes" ] ; then
    cross_prefix="i386-mingw32msvc-"
    cc="${cross_prefix}gcc"
    ar="${cross_prefix}ar"
    grab="no"
fi

# ---
# check availability of some header files

cat > $TMPC << EOF
#include <malloc.h>
int main( void ) { return 0; }
EOF

_memalign=no
_malloc_h=no
if $cc -o $TMPO $TMPC 2> /dev/null ; then
_malloc_h=yes
_memalign=yes
# check for memalign - atmos
cat > $TMPC << EOF
#include <malloc.h>
int main ( void ) {
char *string = NULL;
string = memalign(64, sizeof(char));
return 0;
}
EOF
$cc -o $TMPO $TMPC 2> /dev/null || _memalign=no
fi

echo "Install prefix   $prefix"
echo "C compiler       $cc"
echo "CPU              $cpu"
echo "MMX enabled      $mmx"
echo "gprof enabled    $gprof"
echo "grab enabled     $grab"

echo "Creating config.mak and config.h"

echo "# Automatically generated by configure - do not modify" > config.mak
echo "/* Automatically generated by configure - do not modify */" > config.h

echo "prefix=$prefix" >> config.mak
echo "MAKE=make" >> config.mak
echo "CC=$cc" >> config.mak
echo "AR=$ar" >> config.mak
echo "OPTFLAGS=$CFLAGS" >> config.mak
if [ "$cpu" = "x86" ] ; then
  echo "TARGET_ARCH_X86=yes" >> config.mak
  echo "#define ARCH_X86 1" >> config.h
fi
if [ "$cpu" = "armv4l" ]; then
  echo "TARGET_ARCH_ARMV4L=yes" >> config.mak
  echo "#define ARCH_ARMV4L 1" >> config.h
fi
if [ "$mmx" = "yes" ] ; then
  echo "TARGET_MMX=yes" >> config.mak
  echo "#define HAVE_MMX 1" >> config.h
fi
if [ "$gprof" = "yes" ] ; then
  echo "TARGET_GPROF=yes" >> config.mak
  echo "#define HAVE_GPROF 1" >> config.h
fi
if [ "$lshared" = "yes" ] ; then
  echo "BUILD_SHARED=yes" >> config.mak
else
  echo "BUILD_SHARED=no" >> config.mak
fi
echo -n "VERSION=" >>config.mak
head VERSION >>config.mak
echo "" >>config.mak
# if you do not want to use encoders, disable that.
echo "#define CONFIG_ENCODERS 1" >> config.h
echo "CONFIG_ENCODERS=yes" >> config.mak

# if you do not want to use decoders, disable that.
echo "#define CONFIG_DECODERS 1" >> config.h
echo "CONFIG_DECODERS=yes" >> config.mak

# special AC3 stuff in case you already have it
# without libavcodec.
echo "#define CONFIG_AC3 1" >> config.h
echo "CONFIG_AC3=yes" >> config.mak

if [ "$grab" = "yes" ] ; then
  echo "#define CONFIG_GRAB 1" >> config.h
  echo "CONFIG_GRAB=yes" >> config.mak
fi

if [ "$win32" = "yes" ] ; then
  echo "#define CONFIG_WIN32 1" >> config.h
  echo "CONFIG_WIN32=yes" >> config.mak
fi

if [ "$_malloc_h" = "yes" ]; then
  echo "#define HAVE_MALLOC_H 1" >> config.h
else
  echo "#undef  HAVE_MALLOC_H" >> config.h
fi

if [ "$_memalign" = "yes" ]; then
  echo "#define HAVE_MEMALIGN 1" >> config.h
else
  echo "#undef  HAVE_MEMALIGN" >> config.h
fi

rm -f $TMPO $TMPC $TMPS
